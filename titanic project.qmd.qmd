---
title: "Final Project"
author: "Chelsea Rodrigues"
format: html
editor: visual
---

# Introduction

This analysis explores the Titanic dataset, aiming to provide insights into passenger demographics and survival rates. The dataset was obtained from [GitHub - Awesome Public Datasets](https://github.com/awesomedata/awesome-public-datasets)

# Part 1: Analysis

## Load Libraries and Data

```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)

# Load the dataset
titanic <- read.csv("C:/Users/chels/Downloads/R final project/titanic.csv")
```

# Data Exploration

## Summary Statistics

```{r}
# Display summary statistics
summary(titanic)
```

The dataset contains information on 891 passengers. The 'Survived' variable indicates that around 38.38% of passengers survived. The majority of passengers were in the 2nd and 3rd passenger classes. Age data is available for 714 passengers, with a mean age of approximately 29.7 years

## Missing Values

```{r}
# Count missing values
missing_values <- colSums(is.na(titanic))
missing_values
```

# Data Cleaning

## Remove NA Rows

```{r}
# Remove rows with missing values
titanic_clean <- na.omit(titanic)
head(titanic)
```

# Exploratory Data Analysis

## Passenger Age Distribution

```{r}
# Plot histogram of ages
ggplot(titanic_clean, aes(x = Age)) +
  geom_histogram(binwidth = 5, fill = "purple", color = "black") +
  labs(title = "Distribution of Ages", x = "Age", y = "Frequency")
```

The histogram of ages illustrates a diverse age distribution among passengers, with a peak in the early 20s.

## Survival by Passenger Class

```{r}
# Plot survival by passenger class
ggplot(titanic_clean, aes(x = factor(Pclass), fill = factor(Survived))) +
  geom_bar(position = "stack") +
  labs(title = "Survival by Passenger Class", x = "Class", y = "Count", fill = "Survived")

```

The survival bar chart by passenger class indicates that a higher percentage of 1st-class passengers survived compared to those in the 2nd and 3rd classes.

# Conclusion part 1

In conclusion, this preliminary analysis provides valuable insights into the Titanic dataset. Further investigations could include detailed demographic analyses and survival predictions based on various factors.

# Part 2: R Package - Tidyverse

## Introduction

In this section, we will explore the `tidyverse` package, which is a collection of packages for data manipulation and visualization. The purpose of this demonstration is to showcase some of the key functionality provided by the `tidyverse`.

```{r}
# Load tidyverse
library(tidyverse)
```

# Data Preparation

For this demonstration, we will use the Titanic dataset introduced in Part 1.

# Demonstrating Functionality

## 1. Data Manipulation with dplyr

The dplyr package within tidyverse provides a set of functions for data manipulation. Let's use it to filter passengers who survived and calculate the average age.

```{r}
# Filter survivors and calculate average age
survivor_stats <- titanic %>%
  filter(Survived == 1) %>%
  summarise(Avg_Age = mean(Age, na.rm = TRUE))

print(survivor_stats)
```

## 2. Data Visualization with ggplot2

The ggplot2 package in tidyverse is a powerful tool for creating visualizations. Let's use it to create a bar chart of passenger class distribution.

```{r}
# Plot passenger class distribution
ggplot(titanic, aes(x = factor(Pclass))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Passenger Class Distribution", x = "Class", y = "Count")
```

## 3. Data Wrangling with tidyr

The tidyr package within tidyverse is used for data reshaping. Let's use it to gather and spread data.

```{r}
# Gather and spread data
gathered_data <- titanic %>%
  gather(key = "Variable", value = "Value", -PassengerId, -Name)

spread_data <- gathered_data %>%
  spread(key = "Variable", value = "Value")

head(gathered_data)
head(spread_data)
```

# Conclusion Part 2

The tidyverse package provides a comprehensive set of tools for data manipulation and visualization in R. This demonstration covered only a small portion of its functionality. For more details and advanced usage, refer to the package documentation.

# Part 3: Functions/Programming - Age-Fare Correlation

## Introduction

In this section, we will create an R function to analyze the correlation between passenger age and fare in the Titanic dataset. The function will output an S3 class object named `AgeFareCorrelation`. We will implement appropriate print, summary, and plot methods for this class.

## Function Definition

```{r}
# Function to calculate age-fare correlation
calculate_age_fare_correlation <- function(data) {
  # Filter non-missing age and fare values
  filtered_data <- data %>%
    filter(!is.na(Age) & !is.na(Fare))
  
  # Calculate correlation
  correlation <- cor(filtered_data$Age, filtered_data$Fare)
  
  # Create AgeFareCorrelation object
  result <- list(
    correlation = correlation,
    data = filtered_data
  )
  
  class(result) <- "AgeFareCorrelation"
  
  return(result)
}

```

# S3 Class Definition

```{r}
# Define S3 class
AgeFareCorrelation <- function(correlation, data) {
  obj <- list(
    correlation = correlation,
    data = data
  )
  class(obj) <- "AgeFareCorrelation"
  return(obj)
}
```

# Summary Method

```{r}
# Define summary method for AgeFareCorrelation
summary.AgeFareCorrelation <- function(object, ...) {
  cat("Age-Fare Correlation:", object$correlation, "\n")
}
```

# Print Method

```{r}
# Define print method for AgeFareCorrelation
print.AgeFareCorrelation <- function(object, ...) {
  cat("Age-Fare Correlation Analysis\n")
  cat("-----------------------------\n")
  cat("Correlation:", object$correlation, "\n")
  cat("-----------------------------\n")
}

```

# Plot Method

```{r}
# Define plot method for AgeFareCorrelation
plot.AgeFareCorrelation <- function(object, ...) {
  # Scatterplot of Age vs Fare
  ggplot(object$data, aes(x = Age, y = Fare)) +
    geom_point(color = "pink") +
    labs(title = "Scatterplot of Age vs Fare", x = "Age", y = "Fare")
}
```

# Example Usage

```{r}
#Usage of summary, rpint and plot function
result <- calculate_age_fare_correlation(titanic)
summary(result)
print(result)
plot(result)

```

# Reference

awesomedata (2014). awesome-public-datasets/Datasets/titanic.csv.zip at master Â· awesomedata/awesome-public-datasets. \[online\] GitHub. Available at: https://github.com/awesomedata/awesome-public-datasets/blob/master/Datasets/titanic.csv.zip
